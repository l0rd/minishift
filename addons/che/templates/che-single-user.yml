apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: che-template
message: Eclipse Che in Minishift template
metadata:
  annotations:
    description: Eclipse Che in Minishift
    openshift.io/display-name: eclipse-che
    template.openshift.io/provider-display-name: 'Red Hat, Inc.'
    template.openshift.io/support-url: 'https://access.redhat.com'
  name: che-single-user
parameters:
  - description: The domain name without the project name
    displayName: Che service domain name
    name: DOMAIN_NAME
    require: true
    value: ""
  - description: The OpenShift project where Che service will be deployed
    displayName: Che service project
    name: PROJECT_NAME
    require: true
    value: ""
  - displayName: Che Server Image
    description: The docker image to be used for che.
    name: IMAGE_CHE_SERVER
    value: "eclipse/che-server:latest"
    required: false
  - displayName: OpenShift OAuth Token
    description: Token to get access to the OpenShift API
    name: OPENSHIFT_OAUTH_TOKEN
    value: ""
  - displayName: GitHub client ID
    description: GitHub client ID
    name: GITHUB_CLIENT_ID
    value: ""
  - displayName: GitHub client secret
    description: GitHub client secret
    name: GITHUB_CLIENT_SECRET
    value: ""
objects:
  - apiVersion: v1
    kind: RoleBinding
    metadata:
      name: che
    roleRef:
      name: admin
    subjects:
    - kind: ServiceAccount
      name: che
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app: che
      name: che
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: che
      name: che-host
    spec:
      ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: che
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: che
      name: che-data-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: che
      name: claim-che-workspace
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: che
      name: che
    data:
      che-host: ${PROJECT_NAME}.${DOMAIN_NAME}
      workspace-storage: /home/user/che/workspaces
      workspace-storage-create-folders: "false"
      local-conf-dir: /etc/conf
      openshift-serviceaccountname: che
      che.logs.dir: /data/logs
      che.docker.server_evaluation_strategy.custom.external.protocol: http
      che.predefined.stacks.reload_on_start: "false"
      log-level: INFO
      port: "8080"
      remote-debugging-enabled: "true"
      che-oauth-github-forceactivation: "true"
      workspaces-memory-limit: 4Gi
      workspaces-memory-request: 1.2Gi
      enable-workspaces-autostart: "false"
      keycloak-oso-endpoint: https://sso.openshift.io/auth/realms/fabric8/broker/openshift-v3/token
      keycloak-github-endpoint: https://sso.openshift.io/auth/realms/fabric8/broker/github/token
      che-server-java-opts: -XX:+UseG1GC -XX:+UseStringDeduplication -XX:MinHeapFreeRatio=20
        -XX:MaxHeapFreeRatio=40 -XX:MaxRAM=600m -Xms256m
      che-workspaces-java-opts: -XX:+UseG1GC -XX:+UseStringDeduplication -XX:MinHeapFreeRatio=20
        -XX:MaxHeapFreeRatio=40 -XX:MaxRAM=1200m -Xms256m
      che-openshift-secure-routes: "false"
      che-server-timeout-ms: "3600000"
      che-openshift-precreate-subpaths: "false"
      che-workspace-auto-snapshot: "false"
      che-fabric8-multitenant: "false"
      che-workspace-che-server-endpoint: ""
      che-workspace-logs: "/data/logs/machine/logs"
      che-keycloak-auth-server-url: "https://sso.openshift.io/auth"
      che-keycloak-realm: "fabric8"
      che-keycloak-client-id: "openshiftio-public"
      che-wsagent-ping-success-threshold: "2"
      che-api: http://che-${PROJECT_NAME}.${DOMAIN_NAME}/api
      che-websocket-endpoint: ws://che-${PROJECT_NAME}.${DOMAIN_NAME}/api/websocket
      openshift-username: ""
      openshift-project: "${PROJECT_NAME}"
      pvc-strategy: "unique"
      openshift-trust-certs: "false"
      github-client-id: "${GITHUB_CLIENT_ID}"
      github-client-secret: "${GITHUB_CLIENT_SECRET}"
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: che
      name: che
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        app: che
      strategy:
        recreateParams:
          timeoutSeconds: 10000
        type: Recreate
      template:
        metadata:
          labels:
            app: che
        spec:
          containers:
          - env:
            - name: CHE_LOGS_DIR
              valueFrom:
                configMapKeyRef:
                  key: che.logs.dir
                  name: che
            - name: CHE_LOCAL_CONF_DIR
              valueFrom:
                configMapKeyRef:
                  key: local-conf-dir
                  name: che
            - name: CHE_PREDEFINED_STACKS_RELOAD__ON__START
              valueFrom:
                configMapKeyRef:
                  key: che.predefined.stacks.reload_on_start
                  name: che
            - name: CHE_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: log-level
                  name: che
            - name: CHE_PORT
              valueFrom:
                configMapKeyRef:
                  key: port
                  name: che
            - name: CHE_DEBUG_SERVER
              valueFrom:
                configMapKeyRef:
                  key: remote-debugging-enabled
                  name: che
            - name: JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  key: che-server-java-opts
                  name: che
            - name: CHE_KEYCLOAK_AUTH__SERVER__URL
              valueFrom:
                configMapKeyRef:
                  key: che-keycloak-auth-server-url
                  name: che
            - name: CHE_HOST
              valueFrom:
                configMapKeyRef:
                  key: che-host
                  name: che
            - name: CHE_API
              valueFrom:
                configMapKeyRef:
                  key: che-api
                  name: che
            - name: CHE_WEBSOCKET_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: che-websocket-endpoint
                  name: che
            - name: CHE_INFRASTRUCTURE_ACTIVE
              valueFrom:
                configMapKeyRef:
                  key: docker-connector
                  name: che
            - name: CHE_INFRA_OPENSHIFT_PROJECT
              valueFrom:
                configMapKeyRef:
                  key: openshift-project
                  name: che
            - name: CHE_INFRA_OPENSHIFT_TLS__ENABLED
              valueFrom:
                configMapKeyRef:
                  key: che-openshift-secure-routes
                  name: che
            - name: CHE_MULTIUSER
              valueFrom:
                configMapKeyRef:
                  key: che-fabric8-multitenant
                  name: che
            - name: CHE_OAUTH_GITHUB_CLIENTID
              valueFrom:
                configMapKeyRef:
                  key: github-client-id
                  name: che
            - name: CHE_OAUTH_GITHUB_CLIENTSECRET
              valueFrom:
                configMapKeyRef:
                  key: github-client-secret
                  name: che
            - name: CHE_WORKSPACE_AUTO_START
              value: "true"
            image: ${IMAGE_CHE_SERVER}
            imagePullPolicy: "IfNotPresent"
            livenessProbe:
              httpGet:
                path: /api
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 120
              timeoutSeconds: 10
            name: che
            ports:
            - containerPort: 8080
              name: http
            - containerPort: 8000
              name: http-debug
            readinessProbe:
              httpGet:
                path: /api
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 15
              timeoutSeconds: 60
            volumeMounts:
            - mountPath: /data
              name: che-data-volume
          serviceAccountName: che
          volumes:
          - name: che-data-volume
            persistentVolumeClaim:
              claimName: che-data-volume
      triggers:
      - type: ConfigChange
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: che
      name: che
    spec:
      to:
        kind: Service
        name: che-host
